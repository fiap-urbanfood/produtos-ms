---
name: Deploy App

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Deploy Application - Produtos'
        type: choice
        options:
        - deploy_app

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  EKS_CLUSTER_NAME: ${{ vars.EKS_CLUSTER_NAME }}

permissions:
    id-token: write
    contents: read
    packages: write
    attestations: write

jobs:
  python-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python Version
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install Python dependencies
        run: |
              python3 -m pip install --upgrade pip --user
              python3 -m pip install -r requirements.txt

      - name: Run Python Test
        run: python3 tests/conftest.py

  build:
    name: Build APP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Config AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::857378965163:role/github-actions

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

      - name: Automatic Tagging of Releases
        id: increment-git-tag
        run: |
          bash ./devops/git_update.sh -v patch

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          IMAGE_RELEASE: ${{ steps.increment-git-tag.outputs.git-tag }}
          ECR_REGISTRY:  ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: urbanfood/produtos
          IMAGE_TAG: latest
        run: |
          docker build --no-cache --progress=plain -f devops/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_RELEASE .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_RELEASE $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG          
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_RELEASE
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy EKS
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Config AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::857378965163:role/github-actions
    
      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Deploy to APP EKS
        run: |
          kubectl apply -f k8s/namespace.yml
          kubectl apply -f k8s/app/urbanfood-service.yaml
          kubectl apply -f k8s/app/urbanfood-configmap.yaml
          kubectl apply -f k8s/app/urbanfood-deployment.yaml
          kubectl apply -f k8s/app/urbanfood-hpa.yaml
